{"version":3,"sources":["actions/index.js","components/Films.js","components/NestedComponent.js","components/Details.js","components/Search.js","components/404.js","App.js","serviceWorker.js","reducers/films.js","index.js"],"names":["data","type","payload","Films","useState","films","setFilms","load","setLoad","dispatch","useDispatch","useEffect","a","axios","get","res","results","asyncFilms","filmItems","map","key","episode_id","to","url","split","title","NestedComponent","props","nest","setNest","nestName","all","replace","result","name","sort","asyncData","titleNest","Details","detailId","window","location","pathname","film","setFilm","opening_crawl","characters","planets","species","starships","vehicles","Search","setName","searchValue","setSearchValue","state","setState","disable","setDisable","search","useSelector","Object","entries","length","titleArray","filmsArray","m","push","array","i","filter","toUpperCase","indexOf","id","myFunction","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","value","disabled","n","Fragment","PageNotFound","App","Container","Row","Col","path","exact","component","Boolean","hostname","match","filmReducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.16596ad1.chunk.js","sourcesContent":["const data = (data) => {\r\n    return {\r\n        type: 'DATA_FLOW',\r\n        payload: data\r\n    }\r\n}\r\nexport default data","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport data from '../actions/index'\r\nexport default function Films() {\r\n    const [films, setFilms] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const asyncFilms = async () => {\r\n            const res = await axios.get('https://swapi.dev/api/films/')\r\n            setFilms(res.data.results)\r\n            setLoad(true)\r\n            dispatch(data(res.data.results))\r\n        }\r\n        asyncFilms()\r\n    },[dispatch])\r\n    const filmItems = films.map((data) => (\r\n        <li key={data.episode_id}>\r\n            <Link to={`/details/${data.url.split('/')[5]}`}>\r\n                {data.title}\r\n            </Link>\r\n            </li>\r\n            ))\r\n    // console.log(films)\r\n    return (\r\n        <div>\r\n        {load === true ? (\r\n            <>\r\n            {filmItems}\r\n            </>\r\n        ):(\r\n            <p>Loading...</p>\r\n        )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function NestedComponent(props) {\r\n\r\n    const [nest, setNest] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    useEffect(() => {\r\n        const asyncData = async () => {\r\n            if (props.nestName) {\r\n            let results = (await axios.all(\r\n                props.nestName.map(url => axios.get(`${url.replace('http','https')}`))\r\n            ))\r\n            .map(result => result.data.name)\r\n            setNest(results.sort())\r\n            setLoad(true)\r\n            } else {\r\n                let results = ''\r\n            }\r\n          }\r\n        asyncData()\r\n    }, [props.nestName])\r\n\r\n    return (\r\n        <div>\r\n        <h1>{props.titleNest}</h1>\r\n        {load === true ? (\r\n            <>\r\n            {nest.map(a =>(<li key={a}>{a}</li>))}\r\n            </>\r\n        ):(\r\n            <p>Loading...</p>\r\n        )}\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport NestedComponent from './NestedComponent'\r\nexport default function Details() {\r\n    const detailId = window.location.pathname.split('/')[2]\r\n    const [film, setFilm] = useState([])\r\n    useEffect(() => {\r\n        const asyncFilms = async () => {\r\n            const res = await axios.get(`https://swapi.dev/api/films/${detailId}`)\r\n            setFilm(res.data)\r\n        }\r\n        asyncFilms()\r\n    },[detailId])\r\n    \r\n    return (\r\n        <div>\r\n            {film.title}\r\n            <p>{film.opening_crawl}</p>\r\n            <NestedComponent nestName={film.characters} titleNest={'Characters'}/>\r\n            <NestedComponent nestName={film.planets} titleNest={'Planets'}/>\r\n            <NestedComponent nestName={film.species} titleNest={'Species'}/>\r\n            <NestedComponent nestName={film.starships} titleNest={'Starships'}/>\r\n            <NestedComponent nestName={film.vehicles} titleNest={'Vehicles'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {\r\n    InputGroup,\r\n    FormControl,\r\n} from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from \"react-router-dom\"\r\nexport default function Search() {\r\n    const [name, setName] = useState('')\r\n    const [searchValue, setSearchValue] = useState([])\r\n    const [state, setState] = useState([])\r\n    const [disable, setDisable] = useState('disabled')\r\n    const search = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        setState(search)\r\n        if(Object.entries(search).length > 0) setDisable('')\r\n    },[search])\r\n   \r\n    useEffect(() => {\r\n        const titleArray = [],\r\n              filmsArray = []\r\n        if(state !== {}){\r\n            state.map(m => titleArray.push(m.title))\r\n            state.map(m => filmsArray.push(m))\r\n        }\r\n    const myFunction = (array,name) => {\r\n        let results = []\r\n        for (let i = 0; i < array.length; i++) {\r\n            let filter = name.toUpperCase();\r\n            let a = array[i]\r\n            if (a.toUpperCase().indexOf(filter) > -1) {\r\n                results.push({title:`${filmsArray[i].title}`,id:`${filmsArray[i].url.split('/')[5]}`})\r\n                setSearchValue(results) \r\n            }\r\n        }\r\n        \r\n    }\r\n    myFunction(titleArray,name)\r\n},[])\r\n    return (\r\n        <div>\r\n        <InputGroup className=\"mb-3\">\r\n        {disable === '' ? (\r\n            <>\r\n            <FormControl\r\n                placeholder=\"Type the movie\"\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                onChange={e => setName(e.target.value)}\r\n            />\r\n            </>\r\n        ):(\r\n            <>\r\n            <FormControl\r\n                disabled\r\n                placeholder=\"Type the movie\"\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                onChange={e => setName(e.target.value)}\r\n            />\r\n            </>\r\n        )}\r\n      </InputGroup>\r\n      {name === '' ? (\r\n            <p>Results</p>\r\n          ):(\r\n            <>\r\n            {searchValue.map(n => (\r\n                <React.Fragment key={n.id}>\r\n                <Link to={`/details/${n.id}`}>{n.title}</Link>\r\n                <br/>\r\n                </React.Fragment>\r\n                ))}\r\n                <hr/>\r\n            </>\r\n      )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nexport default function PageNotFound() {\r\n    return (\r\n        <div>\r\n            <p>Page not found</p>\r\n            <Link to=\"/\">Press to return</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\"\r\nimport Films from './components/Films'\r\nimport Details from './components/Details'\r\nimport Search from './components/Search'\r\nimport PageNotFound from './components/404'\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n    <Container className='mt-5'>\r\n      <Row>\r\n        <Col>\r\n      <Switch>\r\n        <Route path=\"/details/:id\">\r\n          <Details/>\r\n        </Route>\r\n        <Route path=\"/TestTask\" exact >\r\n          <Search/>\r\n          <Films/>\r\n        </Route>\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n      </Col>\r\n      </Row>\r\n      </Container>\r\n       </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const filmReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'DATA_FLOW':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default filmReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {createStore} from 'redux'\nimport filmReducer from './reducers/films'\nimport { Provider } from 'react-redux'\nconst store = createStore(\n  filmReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}